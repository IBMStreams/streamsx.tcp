namespace com.ibm.streamsx.tcp ;

/** Common schema for host / port.
 * * srcIP represents the IP address of the host to connect to.
 * * srcPort represents the port on the host to connect to.
 */
type TcpServerConnT = rstring srcIP, uint32 srcPort ;

/** Schema for the output port 0 if the data is an rstring.
 * * line represents the data encoded as rstring
 * * TcpServerConnT represents the remote connection
 */
type TcpServerStrT = tuple<rstring line>, TcpServerConnT;

/** Schema for the output port 0 if the data is a blob.
 * * block represents the data encoded as blob
 * * TcpServerConnT represents the remote connection
 */
type TcpServerBlobT = tuple<blob block>, TcpServerConnT;

/** Schema for the output port 1 to report status of connection
 * * status represents status of connection in rstring
 * * TcpServerConnT represents the remote connection
 */
type TcpServerStatusT = tuple<rstring status>, TcpServerConnT;

/** Enum for action event definition.
 * * LISTEN represents the new dynamic listener to open.
 * * RESPONSE represents the client response in the duplex connection.
 */
type ActionEventT = enum{LISTEN,RESPONSE};

/** Schema for the input port 0 if the data is an rstring.
 * * event represents the kind of the received event (if LISTEN then line is ignored).
 * * TcpServerStrT is the same as output port 0
 */
type TcpServerStrEventT = tuple<ActionEventT event>, TcpServerStrT;

/** Schema for the input port 0 if the data is a blob.
 * * event represents the kind of the received event (if LISTEN then block is ignored).
 * * TcpServerBlobT is the same as output port 0
 * * the message is prepended with the length of the blob  
 */
type TcpServerBlobEventT = tuple<ActionEventT event>, TcpServerBlobT;

/** Schema for the input port 0 if the data is a blob.
 * * event represents the kind of the received event (if LISTEN then raw is ignored).
 * * TcpServerRawEventT is similar to TcpServerBlobT - raw represents the data encoded as binary raw format
 * * the message is not prepended with the length of the blob  
 * * TcpServerConnT represents the remote connection
 */
type TcpServerRawEventT = tuple<ActionEventT event, blob raw>, TcpServerConnT;
