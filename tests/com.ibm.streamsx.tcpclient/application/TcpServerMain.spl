/*
 Copyright (C)2015 International Business Machines Corporation and
 others. All Rights Reserved.
*/
namespace application;

use com.ibm.streamsx.tcp::*;

composite TcpServerMain
{
	graph
	// Start the TCP server at local host and port 2222.
	// Clients are expected to connect to the TCPServer.  Data received from the TCP connection will be
	// converted to tuples and send to downstream operators for analysis.
	// 
	// This operator enables full-duplex support by having an input port.  Data received on the input
	// port will be sent to remote host via one of the existing TCP connections previously established.
	// The destination is defined by the srcIP and srcPort attributes on the input stream.
	//
		stream<TcpServerStrT> TcpServerOp = TCPServer(Functor_3_out0 as inPort0Alias)
		{
			param
				port : 22222u ;
				threadPoolSize : 20u ;				
		}

		() as Sink1 = Custom(TcpServerOp)
		{
			logic
				onTuple TcpServerOp :
				{
					printStringLn((rstring) TcpServerOp) ;
				}

		}

		(stream<TcpServerStrT> Functor_3_out0) as Functor_3 = Functor(TcpServerOp)
		{
			logic
				state :
				{
					mutable uint64 cnt = 0 ;
				}

				onTuple TcpServerOp :
				{
					cnt ++ ;
				}

			output
				Functor_3_out0 : line = line + "\n" ;
		}

}

